-------------- Description of CONTROL file for TBE ----------
(This documentation was written for version 4.1).

We have adapted the asa control file for compatible use with the
empirical tight-binding programs invoked by tbe. Here is a sample TB
file for a hypothetical MoRe alloy in the CsCl structure. One atom is
displaced by a small amount dz. You can use molecular statics or
dynamics to bring it back or set up a phonon vibration.

HEADER  MoRe B2 lattice, exponential (S-D) hamiltonian to 5th nbrs
To test invoke:
        tbe tb >& out.tb
        tbbnd tb >>& out.tb
        echo "1001 -0.5 0.4" | tbdos tb >>& out.tb
VERS    TB-4 LMASA-3
IO      SHOW=F HELP=F VERBOS=31 WKP=F
OPTIONS INVIT=F
VAR     pMo=1.9513 pRe=2.0316 qMo=0.66209 qRe=0.68874 bMo=1394 
        bRe=1893.9 fMo=0.46790 fRe=0.59 f0=(fMo*fRe)^.5 b=(bMo*bRe)^.5
        p=(pMo+pRe)/2 q=(qMo+qRe)/2 s=a0*(3/8/pi)^(1/3) deltaE=0.0581
        dz=0.01
MASTER  a0=5.8922 v0=a0^3/2
        JOB 1 v=v0 a=(2*v)^(1/3) nk=10
STR     RMAX=3^.5*a0/s+0.01
SYMGRP  
BZ      TETRA=F NKABC=nk nk nk METAL=T N=0 W=.005 DOSWT=T RANGE=7
        BZJOB=11 NEVMX=10
STRUC   NBAS=2 NCLASS=2 NL=3
        ALAT=a PLAT= 1 0 0   0 1 0   0 0 1
SITE    ATOM=Mo   POS=   -dz     -dz     -dz
        ATOM=Re   POS= .5+dz   .5+dz   .5+dz
CLASS   ATOM=Mo   R/W=1  Z=42 IDXDN=3 3 1 
        ATOM=Re   R/W=1  Z=75 IDXDN=3 3 1 
ME      2 
        1 1  | 0 0 0 0 0 0 0 -fMo*6 fMo*4 -fMo  
               DECAY=0 0 0 0 0 0 0 qMo qMo qMo
        1 1  ! bMo 0 pMo   0 0 0    0 0 0       
        1 2  | 0 0 0 0 0 0 0 -f0*6 f0*4 -f0     
               DECAY=0 0 0 0 0 0 0 q q q
        1 2  ! b 0 p   0 0 0    0 0 0           
        2 1  | 0 0 0 0 0 0 0 -f0*6 f0*4 -f0     
               DECAY=0 0 0 0 0 0 0 q q q
        2 1  ! b 0 p   0 0 0    0 0 0           
        2 2  | 0 0 0 0 0 0 0 -fRe*6 fRe*4 -fRe  
               DECAY=0 0 0 0 0 0 0 qRe qRe qRe
        2 2  ! bRe 0 pRe   0 0 0    0 0 0       
MIX     NMIX=3 BETA=1 NITMIX=100
TB      FORCES=T EVDISC=T U=F TRH=F PAIR=F 3PV=T
START   BEGMOM=T CNTROL=T CNVG=1D-11
        ATOM=Mo   P= 5 5 4     Q= 0     0     4.39
                                  0     0     deltaE/2
                                  0     0     0.6
        ATOM=Re   P= 6 6 5     Q= 0     0     6
                                  0     0    -deltaE/2
                                  0     0     0.6

A second example for Si in Chadi's model is in lm/testing/ctrl.si


ME    is a category that tells the program what hamiltonian matrix
      to use. It begins with an integer which is either
         0  to indicate that the hopping integrals are fixed
         1  to use the Harrison universal matrix elements for
            semiconductors
         2  for exponential decay
         3  for inverse power decay
         4  for Goodwin Skinner Pettifor (GSP) scaling 
      In cases 2 and 3, the decay is given after the token DECAY0=
      followed by a positive number.
      The hamiltonian matrix elements are given in the next line.
      First comes two numbers indicating the two classes of atoms, then
      a bar (|) then the sssigma, spsigma, ppsigma, pppi,  
                         sdsigma, pdsigma, pdpi, ddsigma,
                         ddpi and dddelta integrals (v_ij) in that order
      A separate decay for each ME can follow the above as a vector
      following a token DECAY=; for example:
      ME      2 
              1 1  | 0 0 0 0 0 0 0 -fMo*6 fMo*4 -fMo  
                     DECAY=0 0 0 0 0 0 0 qMo qMo qMo
              1 1  ! bMo 0 pMo   0 0 0    0 0 0       
      The pair potential matrix elements are read in following a
      shriek (!) in the same way. The syntax following the shriek is
      as follows. The general form of the pair potential is
      sum_i { a_i * d^b_i * exp(-c_i * d)}. The nine numbers after the
      shriek are the three groups of a b c paramters.
      If the power exponents are positive, then the pair potential is
      of Chadi's form, namely A1 eps + a2 eps^2: the third number in 
      each set is the equilibrium bond length. For GSP only the first 
      value (viz $\phi_0$) is taken.

      The syntax for specifying which classes connect to which is
      more general than was described above.  You can specify lists
      of classes, rather individual ones.  See file rdtbh.f for
      description.

      *** NOTE *** the TBE routines use atomic Rydberg units

Here's the output for HELP=T or from invoking tbe -help 'ext':

 -------------------------  START TBE      -------------------------
 WKINIT:  size=  2200K
  
 category  HEADER (optional)
 category  VERS
   ---- Version TB-    4.10 ---
   token  TB-  of cast double
 LMIO (warning) vn4.1 uses avg vmtz unless -novmza
 category  IO (optional)
   token  SHOW=  of cast logical (optional)
   token  HELP=  of cast logical (optional)
   token  VERBOS=  of cast integer and length <= 5 (optional)
   token  WKP=  of cast logical (optional)
   token  IACTIV=  of cast logical (optional)
   token  TIM=  of cast logical (optional)
 category  MASTER (optional):  to define job-dependent variables
   token  JOB  of cast double
 category  CONST (optional):   to define constants
 category  STRUC
   token  NBAS=  of cast integer
   token  NCLASS=  of cast integer
   token  NL=  of cast integer (optional) :
          lmax+1 for basis and augmentation
   token  ALAT=  of cast double :
          scaling of lattice vectors
   token  PLAT=  of cast double and length 9 :
          primitive lattice vectors 
   token  TET=  of cast double (optional)
   token  NLFIT=  of cast integer (optional)
   token  ROT=  of cast double and length 4 (optional)
   token  STRAIN=  of cast double and length 6 (optional)
 category  OPTIONS (optional)
   token  NSPIN=  of cast integer (optional) :
          set to 2 for spin polarized calculations
   token  NONCOL=  of cast logical and length <= 2 (optional) :
          noncollinear magnetism; 2nd argument for mag. force
   token  SS=  of cast double and length 4 (optional) :
          direction vector and angle of magnetic spin spiral
   token  REL=  of cast logical (optional) :
          set to false for nonrelativistic Schrodinger equation
   token  CCOR=  of cast logical (optional) :
          Turn on combined correction
   token  LMH=  of cast logical (optional) :
          Turn on gradient corrections
   token  ADNF=  of cast logical (optional) :
          Turn on automatic downfolding
   token  INVIT=  of cast logical (optional) :
          Use inverse iteration for diagonalization
   token  STONER=  of cast logical (optional) :
          true for generalised Stoner rigid band calculation 
 ... the following tokens are for planar Green's functions
   token  BULKL=  of cast logical (optional) :
          lattice vectors and basis for left bulk
   token  BULKR=  of cast logical (optional) :
          lattice vectors and basis for right bulk
 ... the following tokens make a two-center hamiltonian
   token  TWOC=  of cast logical and length <= 2 (optional) :
          two-center ASA hamiltonian; 2nd switch adds pert corr
   token  ELIN=  of cast double (optional) :
          energy to linearize for ccor in 2C hamiltonian 
   token  MTCOR=  of cast double (optional)
 ... MTCOR=q turns on MT correction w/ specified background q;
               using q=0 makes program calculate q
   token  ZBAK=  of cast double (optional) :
          background charge for Ewald correction
   token  NRMIX=  of cast integer (optional) :
          Number of iterations for Andersen mixing of atomic sc loop
   token  Q=BAND    --- OR:
   token  Q=MAD    --- OR:
   token  Q=ATOM    --- OR:
   token  Q=SHOW (optional)
 category  CLASS
   token  ATOM=  of cast char
   token  Z=  of cast double :
          atomic number
   token  EREF=  of cast double (optional) :
          Reference energy to be subtracted from total energy
   token  I=  of cast double (optional) :
          Stoner parameter 
   token  NR=  of cast integer (optional) :
          number of radial mesh points
   token  A=  of cast double (optional) :
          radial mesh point spacing
   token  R=  of cast double    --- OR: :
          rmax for augmentation
   token  R/W=  of cast double :
          rmax relative to average WS radius
   token  LMX=  of cast integer (optional)
   token  LMXF=  of cast integer (optional)
   token  IDXDN=  of cast integer and length <= 3 (optional) :
          downfolding index: 0, auto; 1 no dnf; 2, fold down; 3, neglect
   token  ALPHA=  of cast double and length 3 (optional) :
          screening parameters for structure constants
   token  BULKL=  of cast logical (optional) :
          Mark class as belonging to left bulk Green's function
   token  BULKR=  of cast logical (optional) :
          Mark class as belonging to right bulk Green's function
   token  DV=  of cast double (optional)
   token  IDMOD=  of cast integer and length <= 3 (optional) :
          idmod=0 floats P to band CG, 1 freezes P, 2 freezes enu
   token  GROUP=  of cast integer (optional)
   token  AMASS=  of cast double (optional) :
          nuclear mass (for molecular dynamics)
   token  GRP2=  of cast integer (optional)
 category  SITE
   token  ATOM=  of cast char
   token  POS=  of cast double and length 3
   token  DELTA=  of cast double (optional)
   token  RELAX=  of cast integer (optional)
   token  PL=  of cast integer (optional) :
          (pgf) Assign principal layer number to this site
   token  PLV=  of cast integer (optional) :
          (pgf) Assign PL potential index to this site
 category  SYMGRP
 category  STR (optional)
   token  NKAP=  of cast integer (optional)
   token  EKAP=  of cast double    --- OR:
   token  EW**2=  of cast double (optional)
   ... MODE=0 for TB (def); MODE=1 (11) for Gamma (Gamma+cc)
   token  MODE=  of cast integer (optional)
   token  RMAX=  of cast double (optional)
   token  SHOW=  of cast logical (optional)
   token  RFIT/W=  of cast double (optional)
 category  BZ
   token  NKABC=  of cast integer and length <= 3    --- OR:
   token  GETQP=  of cast logical (optional)
   token  TETRA=  of cast logical (optional)
   token  BZJOB=  of cast logical and length <= 4 (optional)
   token  METAL=  of cast logical (optional)
   token  DOSWT=  of cast logical (optional)
   token  ZVAL=  of cast double (optional)
   token  EFMAX=  of cast double (optional)
   token  NEVMX=  of cast integer (optional)
   ... if METAL=T and TETRA=T, the following token is needed:
   token  TOL=  of cast double (optional)
   ... if METAL=T and TETRA=F, the following 4 tokens are used:
   token  N=  of cast integer (optional)
   token  W=  of cast double (optional)
   token  RANGE=  of cast double (optional)
   token  NPTS=  of cast integer (optional)
   ... The following token is for the constrained moments method:
   token  CMOM=  of cast double (optional)
   ... CMOM=mom Imposes fixed magnetic moment over the unit cell
       CMOM=0 turns off the constraint
   token  SAVDOS=  of cast logical (optional)
   ... if SAVDOS=T, NPTS and DOS(2) is also needed.
   token  DOS=  of cast double and length 2
   ... the next four for Stoner model
   token  MMIN=  of cast double (optional)
   token  MMAX=  of cast double (optional)
   token  MNPTS=  of cast integer (optional)
   token  IO=  of cast logical (optional)
 category  EWALD (optional)
   token  NKDMX=  of cast integer (optional)
   token  AS=  of cast double (optional)
   token  TOL=  of cast double (optional)
 category  MIX (optional)
   token  MODE=  of cast char (optional)
     Syntax of MODE (Anderson or Broyden mixing):
     A[nmix][,b=beta][,n=nit][,w=w1,w2][,nam=fn][,k=nkill][;...]  or
     B[nmix][,b=beta][,wc=wc][,n=#][,w=w1,w2][,nam=fn][,k=nkill]
   ... (Warning) the following tokens are obsolete
   token  BETA=  of cast double (optional)
   token  NMIX=  of cast integer (optional)
   token  NOMAD=  of cast logical (optional)
   ... The following tokens apply to LMCNST only
   token  CSTMOD=  of cast integer (optional) :
          (lmcnst) 0 for normal; 1 to average V by group
   token  EMAD0=  of cast double (optional) :
          (for modcst=2): retain old v for vec of mad mat > emad0
   token  NVLOOP=  of cast integer and length <= 3 (optional)
   ... nvloop=n m makes n full constrained loops using beta, 
       followed by m normal loops using betv.
       Use n,m<0 to delete mixing file at close of set
       Third argument removes fixing files moduls 3rd arg
   token  RMSCST=  of cast double (optional)
   token  BETV=  of cast double (optional)
 category  START (optional)
   token  NIT=  of cast integer (optional)
   token  CNVG=  of cast double (optional)
   token  FREE=  of cast logical (optional)
   token  BEGMOM=  of cast logical (optional)
   token  RDVES=  of cast logical (optional)
   token  CNTROL=  of cast logical (optional)
 category  TB (optional)
   token  RMAXH=  of cast double :
          Hamiltonian cut-off length
   token  RMAXR=  of cast double (optional) :
          Density matrix cut-off
   token  FORCES=  of cast logical (optional)
   token  MD=  of cast logical (optional) :
          for molecular dynamics 
   token  3PV=  of cast logical (optional) :
          pressure
   token  EVDISC=  of cast logical (optional) :
          can be F for insulators or to save space for metals 
   token  PAIR=  of cast logical (optional) :
          pair potential only
   token  TRH=  of cast logical (optional) :
          local projection of band energy
   token  U=  of cast logical (optional) :
          for mock-Hubbard hamiltonian
   ... if U=T, the next 3 tokens are used:
   token  NITMIX=  of cast integer (optional) :
          iterations in charge self-consistency
   token  BETA=  of cast double (optional) :
          mix parameter
   token  UTOL=  of cast double (optional) :
          charge tolerance
   ... the following 4 tokens are for molecular statics:
   token  TOL=  of cast double (optional) :
          convergence criterion (displacements)
   token  STEP=  of cast double (optional) :
          step length
   token  VOL=  of cast logical (optional) :
          relax volume of cell as well atom atom positions
   token  RDHESS=  of cast logical (optional) :
          get hessian matrix from disc to restart relaxation
   ... the following 5 tokens are for molecular dynamics:
   token  START=  of cast logical (optional) :
          start new MD run
   token  TSTEP=  of cast double (optional) :
          time step in femtoseconds 
   token  NITEQU=  of cast integer (optional) :
          number of equilibration steps
   token  TEMP=  of cast double (optional) :
          T in Kelvins 
   token  SYRUP=  of cast double (optional) :
          to remove kinetic energy
   ... the following token is for MD and statics:
   token  NIT=  of cast integer (optional) :
          total maximum number of iterations
   token  GSP=  of cast logical (optional) :
          for Goodwin-Skinner-Pettifor scaling
   ... if GSP=T, the following 6 tokens are used:
   token  N=  of cast double
   token  NC=  of cast double
   token  M=  of cast double
   token  MC=  of cast double
   token  R0=  of cast double
   token  RC=  of cast double



CLASS the downfolding switches, IDXDN, are used to determine the
      tight-binding basis for each class. Thus in the above example,
      the s and p are excluded and the bands are just d-bands. For an
      sp basis, one can simply set nl=2 in STRUC. f-electrons are not
      allowed. Unlike in the LMTO case, in tbe all atoms of the
      same chemical element are in one class, irrespective of whether
      they are equivalent by symmetry. Atoms belonging to one class
      are those which have the same matrix elements.
TB    This category reads the switches specific to the tight-binding
      programs. RMAXH sets the range of the hamiltonian and pair potential
      (units alat); FORCES turns on interatomic forces. Unless MD is set
      the program then does variable metric molecular statics to relax 
      those atoms indicated by the token RELAX= in category CLASS. The
      volume of the cell may also be relaxed by setting VOL=T. The other
      tokens used in molcular statics are STEP to set the maximum step
      length in atomic movements, TOL to set the stopping criterion for
      the atomic displacement and RDHESS which, when set, reads and 
      writes the hessian matrix so that a run can be stopped and 
      restarted. If MD=T then the program does Verlet molecular dynamics
      at a given temperature given in Kelvins following token T=. After
      a given number of equilibration steps (NITEQU=) an amount of
      SYRUP is added to provide a viscous force to each atom to quench
      out the kinetic energy and arrive (hopefully) at the global 
      minimum. The timestep for MD is input in femtoseconds following
      the token TSTEP=, and the atomic mass is given in "carbon units"
      following token AMASS= in category CLASS. (Note that the MD tokens
      contain the only exceptions to the rule that atomic Rydberg units
      are always used --- however, as long as U=F then tbe will work
      with any consistent set of units.) For both MD and molecular 
      statics the maxmimum total number of steps follows the token NIT=.
      You can also do self-consistent tight-binding with a finite 
      Hubbard U specified in the START category, in which case the 
      tokens are NITMIX=, BETA= and UTOL= for the mixing iteration 
      number, Anderson mixing parameter and tolerance. GSP=T turns on
      the GSP scaling (see ME category above) in which case the 
      parameters are input as shown in the help listing above.
      (see GSP's paper: M and MC are the equivalent of N and NC but for
      the pair potential.) Finally, three useful tokens are 3PV=T to
      print out the prsssure, TRH=T to decompose the band energy into
      its local components and PAIR=T to use only the pair potential:
      this can be useful for debugging as well as a means to do 
      classical MD and molecular statics.
START The P parameters must be set for consistency with the LMTO, but
      they are not used. The Q parameters are 0th 1st and 2nd moments
      as in LMTO, in that they are respectively, the number of
      electrons, the on-site hamiltonian elements and the Hubbard U
      for each class. TBE will take the number of electrons from the
      0th moment if ZVAL= is not set in the BZ category
OPTIONS The default in the diagonaliser is to calculate eigenvalues
      only, or eigenvectors as well by inverse iteration (see diagno.f).
      This is very much the quickest. This may lead to an error in
      TINVIT, in which case set INVIT=F and re-start TBE. The token
      STONER=T is used to do a generalised Stoner model rigid band
      calculation for d-band ferromagnetism, see the documentation
      to stoner.f in lm/subs. 
BZ    For the density of states program TBDOS, one must first
      run TBE with DOSWT=T in BZ. This tells the program to make
      eigenvectors and write a weights file to disc to make the
      partial densities of states. If STONER=T is set in OPTIONS then
      tokens MMAX, MNPTS and IO need to be set (see stoner.f)


